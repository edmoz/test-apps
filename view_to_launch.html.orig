<<<<<<< HEAD
<!DOCTYPE html>
<html>

  <head>
    <meta charset='utf-8' />
    <meta http-equiv="X-UA-Compatible" content="chrome=1" />
    <meta name="description" content="Edmoz.github.io : " />

    <link rel="stylesheet" type="text/css" media="screen" href="stylesheets/stylesheet.css">

    <title>Edmoz.github.io</title>
    <script type="text/javascript">
=======
>>>>>>> a5e24d9c845609c0056cb5b8be0675fc50493f9d
    var emailEndpoint, imEndpoint;

    // The user has logged in, now's a good time to register the channels
    MyAppFramework.addEventListener('user-login', function() {
      setupAppRegistrations();
    });

    function setupAppRegistrations() {
     // Issue a register() call
     // to register to listen for a notification,
     // you simply call push.register
     // Here, we'll register a channel for "email" updates.
     // Channels can be for anything the app would like to get notifications for.
     var reqEmail = navigator.push.register();
     reqEmail.onsuccess = function(e) {
       emailEndpoint = e.target.result;
       storeOnAppServer("email", emailEndpoint); // This is the "Hand wavey" way that the App 
                                                    // sends the endPoint back to the AppServer
     }

     // We'll also register a second channel for "im", because we're social and all about the socialists. Or something.
     var reqIm = navigator.push.register();
     reqIm.onsuccess = function(e) {
       imEndpoint = e.target.result;
       storeOnAppServer("im", imEndpoint);
     }
    }

    // Once we've registered, the AppServer can send version pings to the EndPoint.
    // This will trigger a 'push' message to be sent to this handler.
    navigator.mozSetMessageHandler('push', function(message) {
        if (message.pushEndpoint == emailEndpoint)   // Yay! New Email! Steve and blue can dance!
          getNewEmailMessagesFromAppServer(message.version);
        else if (message.pushEndpoint == imEndpoint) // Yay! An IM awaits. I wonder if it's Sam's IM?
          getNewChatMessagesFromAppServer();
      });

    // to unregister, you simply call..
    AppFramework.addEventListener('user-logout', function() {
      navigator.push.unregister(emailEndpoint);
      navigator.push.unregister(imEndpoint);
    });

    // error recovery mechanism
    // will be called very rarely, but application
    // should register again when it is called
    navigator.mozSetMessageHandler('push-register', function(e) {
        if (AppFramework.isUserLoggedIn) {
          setupAppRegistrations();
        }
        else {
          // since user isn't logged in, when he logs in
          // registrations will be setup due to event handler
        }
      });
<<<<<<< HEAD

    </script>
  </head>

  <body>
  </body>
</html>
=======
>>>>>>> a5e24d9c845609c0056cb5b8be0675fc50493f9d
